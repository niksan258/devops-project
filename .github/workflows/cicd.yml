name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup:
    name: Setup and Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm ci

      - name: Save Repository Code
        uses: actions/upload-artifact@v4
        with:
          name: repo-code
          path: .

  lint:
    name: Lint Code
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Code
        uses: actions/download-artifact@v4
        with:
          name: repo-code

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

  test:
    name: Run Unit Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Code
        uses: actions/download-artifact@v4
        with:
          name: repo-code

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test

  style:
    name: Style Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Code
        uses: actions/download-artifact@v4
        with:
          name: repo-code

      - name: Install Dependencies
        run: npm ci

      - name: Check Styles
        run: npm run stylecheck

  codeql:
    name: Static Code Analysis
    needs: [lint, test, style]
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

    docker:
      name: Build and Push Docker Image
      needs: [codeql]
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Build Docker Image
          run: docker build -t niksan258/devops-project:latest .

        - name: Run Trivy Vulnerability Scanner
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: niksan258/devops-project:latest
            format: table
            exit-code: 1
            ignore-unfixed: true
            vuln-type: os,library
            severity: CRITICAL,HIGH

        - name: Push Image to Docker Hub
          run: |
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker push niksan258/devops-project:latest

        - name: Deploy Image to Render
          uses: gh-actions-workflows/deploy-docker-render@v1.1
          with:
            deploy-hook: ${{ secrets.RENDER_WEBHOOK }}
            image-url: niksan258/devops-project:latest
            render-api-key: ${{ secrets.RENDER_API_KEY }}
            wait-for-deployment: true
