name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  ci:
    uses: .github/workflows/ci-template.yml

  build-docker:
    name: Build Docker Image
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t your-dockerhub-username/your-image-name:latest .

      - name: Archive Docker Image
        run: docker save your-dockerhub-username/your-image-name:latest | gzip > image.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar.gz

  scan-docker:
    name: Scan Docker Image
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: your-dockerhub-username/your-image-name:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  upload-docker:
    name: Upload Docker Image
    needs: scan-docker
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Push Image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push your-dockerhub-username/your-image-name:latest

  deploy-docker:
    name: Deploy Docker Image
    needs: upload-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Image to Render
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_WEBHOOK }}
          image-url: your-dockerhub-username/your-image-name:latest
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deployment: true
