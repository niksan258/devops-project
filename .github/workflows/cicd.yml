name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Stage 1: Setup
  setup:
    name: Setup and Cache Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

  # Stage 2: Validation
  unit-tests:
    name: Run Unit Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Run Unit Tests
        run: npm run test

  integration-tests:
    name: Run Integration Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Run Integration Tests
        run: npm run integration-test

  lint:
    name: Lint Code
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Lint Code
        run: npm run lint

  format:
    name: Check Code Formatting
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Style Check
        run: npm run stylecheck

  codeql:
    name: Static Code Analysis
    needs: setup
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Stage 3: Build
  docker:
    name: Build, Scan, and Push Docker Image
    needs: [unit-tests, integration-tests, lint, format, codeql]
    runs-on: ubuntu-latest
    steps:
      - name: Build Docker Image
        run: docker build -t niksan258/devops-project:latest .

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: niksan258/devops-project:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

      - name: Push Docker Image
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push niksan258/devops-project:latest
