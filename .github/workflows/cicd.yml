name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Save Repository Code
        uses: actions/upload-artifact@v4
        with:
          name: repo-code
          path: .

  lint:
    name: Lint Code
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Code
        uses: actions/download-artifact@v4
        with:
          name: repo-code

      - name: Install Dependencies
        run: npm ci

      - name: Run Lint
        run: npm run lint

  test:
    name: Run Unit Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Code
        uses: actions/download-artifact@v4
        with:
          name: repo-code

      - name: Install Dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test

  style:
    name: Style Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Download Repository Code
        uses: actions/download-artifact@v4
        with:
          name: repo-code

      - name: Install Dependencies
        run: npm ci

      - name: Check Styles
        run: npm run stylecheck

  codeql:
    name: Static Code Analysis
    needs: [lint, test, style]
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build-docker:
    name: Build Docker Image
    needs: codeql
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t niksan258/devops-project:latest .

      - name: Archive Docker Image
        run: docker save niksan258/devops-project:latest | gzip > devops-project.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: devops-project.tar.gz

  scan-docker:
    name: Scan Docker Image
    needs: build-docker
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: gunzip -c devops-project.tar.gz | docker load

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: niksan258/devops-project:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library
          severity: CRITICAL,HIGH

  upload-docker:
    name: Upload Docker Image
    needs: scan-docker
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker Image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker Image
        run: gunzip -c devops-project.tar.gz | docker load

      - name: Push Image to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push niksan258/devops-project:latest

  deploy-docker:
    name: Deploy Docker Image
    needs: upload-docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Image to Render
        uses: gh-actions-workflows/deploy-docker-render@v1.1
        with:
          deploy-hook: ${{ secrets.RENDER_WEBHOOK }}
          image-url: niksan258/devops-project:latest
          render-api-key: ${{ secrets.RENDER_API_KEY }}
          wait-for-deployment: true
